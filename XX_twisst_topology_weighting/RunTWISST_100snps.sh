#!/bin/bash -l
#SBATCH -A snic2021-5-400
#SBATCH -p core
#SBATCH -n 1
#SBATCH --array=1-8:1
#SBATCH -M rackham
#SBATCH -t 15:00:00
#SBATCH -J TWISST_28Loci
#SBATCH --mail-type=ALL
#SBATCH --mail-user=ashley.sendell-price@imbim.uu.se

####################################################################################################
# REQUIRES THE FOLLOWING INPUT FILES
# 1. chroms.list - list of chromosomes to be included in analysis (8 chroms containing the 28 loci)
# 2. samples.txt - list of samples to be included in analysis
# 3. groups.txt - assigns samples to groups for TWISST analysis

# OTHER REQUIREMENTS
# This script makes use of Simon Martin's genomics_general and Twisst python scripts. These can be
# found here:
# https://github.com/simonhmartin/genomics_general
# https://github.com/simonhmartin/twisst 

####################################################################################################

#STEP 1: Load conda environment / required modules
module load conda
conda activate ete3
ml bioinfo-tools vcftools bcftools PhyML/3.3.20190321

#STEP 2: Set path to bed file containg phased sample genotypes
BCF=/proj/snic2020-2-19/private/darwins_finches/users/erikenbody/Finch_asm/phasing/finches_324_shapeit4_phased.bcf

#STEP 3: Set chromosome using slurm array ID, create directory for analyses and move into it
CHR=$(head -n $SLURM_ARRAY_TASK_ID chroms.list | tail -n 1)
mkdir ${CHR}_100snps
cd ${CHR}_100snps

#STEP 4: Convert bcf to compressed vcf, keeping only SNPs within region of interest (focal chrom),
#and samples specified in samples.txt file
vcftools --bcf $BCF \
--chr $CHR \
--keep ../samples.txt \
--recode --stdout \
| bgzip > ${CHR}.vcf.gz

#STEP 5: Convert vcf to Simon Martin's "geno" format
python ../genomics_general/VCF_processing/parseVCF.py \
-i ${CHR}.vcf.gz \
| gzip > ${CHR}.geno.gz

#STEP 6: As the sample names in the vcf contain "_" and the same delimiter is used by
#twisst, we will now replace "_" in sample names with "." instead
#Note: this change will need to be reflected in the groups.txt file
zcat ${CHR}.geno.gz | head -n 1 | sed 's/_/./g' \
| gzip > ${CHR}.geno.fixedIDs.geno.gz
zcat ${CHR}.geno.gz | tail -n +2 \
| gzip >> ${CHR}.geno.fixedIDs.geno.gz

#STEP 7: Create trees in 100 snp windows using Simon Martin's "phyml_sliding_windows.py" script.
#This is part of his genomics_general script set
python2 ../genomics_general/phyml_sliding_windows.py \
--phyml /sw/bioinfo/PhyML/3.3.20190321/rackham/bin/phyml \
-w 100 -M 50 -Mi 50 --windType sites --model GTR --optimise n \
-g ${CHR}.geno.fixedIDs.geno.gz --prefix ${CHR}.phyml_bionj.w100snps

#STEP 8: Run TWISST using files generated by previous step
python ../twisst/twisst.py \
-t ${CHR}.phyml_bionj.w100snps.trees.gz \
-w ${CHR}.phyml_bionj.w100snps.weights.csv.gz \
--outputTopos ${CHR}.phyml_bionj.w100snps.topologies.trees \
-g G.magnirostris \
-g G.fuliginosa \
-g C.parvulus \
-g P.inornata \
--method complete --groupsFile ../groups.txt

#DONE!
#The results can now be visualised using the following R scripts:
#data_wrangling_TWISST.R - conducts the data processing
#plot_TWIST.R - plots the results